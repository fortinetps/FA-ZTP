---
# get all the files for each fortigate
- name: Find the fortigate definition files
  find:
    paths: "{{role_path}}/vars/fortigates/"
    patterns: "*.yml,*.yaml"
  register: imported_fgt_files

- name: read imported fortigate files
  set_fact:
    ztp_input_fortigates: "{{ ztp_input_fortigates + [ lookup('file', item.path, convert_data=True) | from_yaml] }}"
  loop: "{{ imported_fgt_files.files|flatten(levels=1) }}"
  loop_control:
    label: "{{ item.path }}"

- set_fact:
    ztp_fortigates_with_cidr: []

- name: Save only the fortigates WITH a Parent CIDR branch assignment
  set_fact:
    ztp_fortigates_with_cidr: "{{ ztp_fortigates_with_cidr + [ item ] }}"
  loop: "{{ ztp_input_fortigates }}"
  when: item.parent_cidr is defined

- name: Generate Assignments to Hubs via Jinja
  set_fact:
    ztp_hub_assignments: "{{ lookup('template', 'cidr/assign_fgts_to_hubs.j2') }}"

#- debug: var=ztp_hub_assignments

- name: Write the Assigned Branch CIDR ZTP Fortigates back to files
  copy:
    content: "{{ item | to_nice_yaml }} "
    dest: "{{role_path}}/vars/fortigates/{{item['fgt_name']}}.yml"
    force: yes # overwrite the existing file!
  loop: "{{ ztp_hub_assignments }}"

